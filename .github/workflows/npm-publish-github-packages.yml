# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: action名称

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository # 检出仓库
        uses: actions/checkout@v4
      - run: ls -al
      - uses: actions/setup-node@v4 # 设置node环境
        with:
          node-version: 20 # 指定node版本
          registry-url: https://npm.pkg.github.com/
      - run: |
          corepack enable
          pnpm install
      - run: |
          pnpm run build
        # env:
        #   NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Clean up
        run: |
          pwd
          ls -al
        working-directory: ./ # 指定工作目录
      # 构建产物
      # - name: Deploy to Staging server
      #   uses: easingthemes/ssh-deploy@main
      #   with:
      #     SSH_PRIVATE_KEY: ${{ secrets.ACCESS_TOKEN }}
      #     ARGS: "-rlgoDzvc -i"
      #     SOURCE: "dist/"
      #     REMOTE_HOST: 127.0.0.1
      #     REMOTE_USER: root
      #     TARGET: /root/www/r-hooks
      #     EXCLUDE: "/dist/, /node_modules/"
      #
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: ./

          # - name: Push to Docker Hub
          # uses: docker/build-push-action@v1
          # with:
          #   username: ${{ secrets.DOCKER_HUB_NAME }}
          #   password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          #   repository: kklldog/agile_config
          #   tags: test
  # publish-gpr:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         registry-url: https://npm.pkg.github.com/
  #     - run: npm ci
  #     - run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  download:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: my-artifact
          path: path/to/file/a.txt
      - run: ls -al
